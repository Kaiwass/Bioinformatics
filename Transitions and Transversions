string = """>Rosalind_0152
TTCCCCAGACTCTGGTGAAGTCTGGTTCGAAGACCACCCGGGATGATGACACGTAACCTG
ATATTCCATGCGCTGACCTGCCGCTTAGTGGTCTATGTACAATATGGTATGCTCCATCTG
AGTTGCTGCGATAATGACACGGGCTAAAACCAAGGATTATAGGGTACCCCCGGTCTAAAG
TGGTCAAGAACCGTGGCGGCTGGTTTGCTCCTACCTGCAAAATGTGTGTCGCAGTCGGCT
GTTGTAGGGGAATCGAGAATTGCCCTTGTGTATGCCATCAACGTAATCACACGACTACAC
TAGTGCCGCTTAAACCAATATACGCGCTGAAGCGGCGCTGTTCTCAGTAACTCAGTTGTT
TGAATCAACATAACATGACAGGCACGCCCCGTAGTAGCAGCCAATAGGCCTCGGTAGGCG
CGATCCCCATTGGTCATTGATTGTTTTCGACAAATCTAGCCAACTAACGCCCAAATAAGC
TATGTGTGTTAGTGCCGTGAACTCCTGTATGTCATAAACCGGTCTCTTATCCGGTGCAAT
CGAGTGGGAAACTTGGCCGTCTCTTTAAGATCAGAAGGACACTTTCAAATACAATACAGG
ACCTATGGTCAGCGACAGAGGTTCTTAACTCTTTATCCTTTATCACAACTAAGAACGCTT
ACTTGTATGGTTTGTGACCCGTCCAAACCTTCCAAACACTCCAAAGCTAATATCAAGGCT
TGCGCAGATCAACCAACTGCCGGGGCATATTTAGTTCATGTATGTAGGTTATCCCTGTAA
TAAGTAGCTACCGTGCAATCCCTCATTCAGTGACCGCAACTCAGCAACCCAGTCCGACGA
AGACTAACGGAGCCGGCCAAGAAAAAATCGCTCTAGGGTGTACCCCTAGACAGTTGTTTT
GTATGGATCTGTT
>Rosalind_1711
TTCCCCGGGTTACTGCAAAGTATGGTTCGAAGACCACCTGGGATGGTGATGTATAGCCCT
ACGTTTTATGCGCTGACCTGCTGCTCAGTAGCCTATGCGCAGCGTGAAGTGCTGCGCCTC
AATTACTGTCATAGAGACACGGACTAAAACCAAGGATTATAGGCTGTTCTCGGTCCAAAG
AGATAAAGAGCTGTGTCGGCTGGTTGGTCCTAGTCCGCCGAATATTTGTCGGGGTTAGCT
ATTGCGGAGGAGTCGAGAACTAACATCATACATGTCGTTGACGTGGCTGCACGATAACAC
TCATGCCGCCCAAACCAATGTGCGCGCTATAGCAGCGTTATTCTCAGTGATTGAGTTGCT
CAGGCCAGCATATTCTAACAGGCACGCCCCATGGCAACAGTCGGCCGGACTAGATGAGCA
CTTCCTTTGTTGGTCCTCGATTGTTTTCGACCAACCTAGCACACTGGCGCCCAAATGAGA
CAGGTGCGTTAATGCCGGAAACTCCCGCATCCAATAAATCGATCCCGCGTCTGATGCACG
CAAGTGGGGGACTTAACCGTCTCTTTAAGCCGAGAAAAGTACTTCCAAATGAAACACAAA
ACCGGTAGTCAGCGGCGGAGGTTCTCAACTCCTGGTCTTTTGTCACATCTAAGAACGCTT
ACTCGTGTGGCTTGTAAATTTTTCAAACCTTCCAAATATTTCAAAGTCAATATTACGGCA
TGAGGAAACCGACCAGCTACCAGGGCTTATTTAGTCAACGCACCTTGGATATCGCTGTAG
GGAGTAGTCACCGTGTGATCTCTTACCCGGTATCTGCGGGTCAACAACGCTCCCCGACAG
AGAGGAGCGGAGCCGGCCCAGGAAGTGTGAGCCTAGCGTGTACACCTATGTAGTTGTTTT
ACATCCTCCTGTC"""

new = string.split()
name = []
strand = []
for i in range(len(new)):
    st = ''
    if '>' in new[i]:
        name.append(new[i][1:])
        for y in range(i+1, len(new)):
            if '>' in new[y]:
                strand.append(st)
                break
            st += new[y]
            if y == len(new)-1:
                strand.append(st)

transitions = 0
transversions = 0
x = 'AG'
y = 'CT'
for i in range(len(strand[0])):
    if strand[0][i] != strand[1][i]:
        if strand[0][i] in x:
            if strand[1][i] in y:
                transversions += 1
            else:
                transitions += 1
        elif strand[0][i] in y:
            if strand[1][i] in x:
                transversions += 1
            else:
                transitions += 1

hamm = transitions/transversions

print(hamm)
