problem = """10
1 2
2 8
4 10
5 9
6 10
7 9"""
lone = 0
nums = []
new = problem.split('\n')
pairs = new[1:]
number = int(new[0])
for i in range(1, number+1):
    nums.append(i)

for char in nums:
    if str(char) not in ' '.join(pairs):
        lone += 1  

real_pairs = []
for pair in pairs:
    add = []
    for num in pair.split(' '):
        add.append(int(num))
    real_pairs.append(add)

sub_tree = []
for i in range(len(real_pairs)):
    key = []
    if real_pairs[i] not in [j for i in sub_tree for j in i]:
        key.append(real_pairs[i])
        x = 0
        while x < len(real_pairs):
            for pair in real_pairs:
                x += 1
                for k in key:
                    if pair not in key and pair not in [j for i in sub_tree for j in i]:
                        if pair[0] in k or pair[1] in k:
                            key.append(pair)
                            x = 0
        sub_tree.append(key)
  
result = len(sub_tree) -1 + lone
print(result)
